{"version":3,"sources":["src/app/modules/user/add-users/add-users.component.html","src/app/modules/user/list-users/list-users.component.html","src/app/modules/user/user.component.html","src/app/modules/user/view-users/view-users.component.html","src/app/core/models/user.ts","src/app/core/services/user/user.service.ts","src/app/modules/user/add-users/add-users.component.scss","src/app/modules/user/add-users/add-users.component.ts","src/app/modules/user/list-users/list-users.component.scss","src/app/modules/user/list-users/list-users.component.ts","src/app/modules/user/user-routing.module.ts","src/app/modules/user/user.component.scss","src/app/modules/user/user.component.ts","src/app/modules/user/user.module.ts","src/app/modules/user/view-users/view-users.component.scss","src/app/modules/user/view-users/view-users.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<pre></pre>\\n<mat-icon mat-list-icon><i class=\\\"material-icons\\\" (click)=\\\"goBack()\\\" routerLink=\\\"back\\\">reply_all</i></mat-icon>\\n<pre></pre>\\n<form (ngSubmit)=\\\"submit()\\\" #userForm=\\\"ngForm\\\">\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>&nbsp;&nbsp;User Name</mat-label>\\n    <input #usernameNgModel=\\\"ngModel\\\" required [(ngModel)]=\\\"user.username\\\" id=\\\"username\\\" name=\\\"username\\\" matInput>\\n    <mat-error *ngIf=\\\"usernameNgModel.invalid\\\">\\n      <span *ngIf=\\\"usernameNgModel.errors.required\\\">Username is required</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>&nbsp;&nbsp;Password</mat-label>\\n    <input #passwordNgModel=\\\"ngModel\\\" required minlength=\\\"8\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" id=\\\"password\\\"\\n           name=\\\"password\\\" matInput>\\n    <mat-error *ngIf=\\\"passwordNgModel.invalid\\\">\\n      <span *ngIf=\\\"passwordNgModel.errors.minlength\\\">Password is short</span>\\n      <span *ngIf=\\\"passwordNgModel.errors.required\\\">Password is required</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>&nbsp;&nbsp;First Name</mat-label>\\n    <input required [(ngModel)]=\\\"user.firstName\\\" id=\\\"firstName\\\" name=\\\"firstName\\\" matInput>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>&nbsp;&nbsp;Last Name</mat-label>\\n    <input required [(ngModel)]=\\\"user.lastName\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" matInput>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>&nbsp;&nbsp;Email</mat-label>\\n    <input required [(ngModel)]=\\\"user.email\\\" id=\\\"email\\\" name=\\\"email\\\" matInput>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field>\\n    <mat-label>&nbsp;&nbsp;&nbsp;&nbsp;Role</mat-label>\\n    <mat-select [(ngModel)]=\\\"user.role\\\" id=\\\"role\\\" name=\\\"role\\\" matNativeControl required>\\n      <mat-option [value]=\\\"'ADMIN'\\\">&nbsp;&nbsp;Admin</mat-option>\\n      <mat-option [value]=\\\"'RESPONSIBLE'\\\">&nbsp;&nbsp;Responsible</mat-option>\\n      <mat-option [value]=\\\"'DEVELOPER'\\\">&nbsp;&nbsp;Developer</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <br>\\n  <button [disabled]=\\\"userForm.invalid\\\" position=\\\"right\\\" type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">\\n    <span>   </span>\\n    Submit\\n  </button>\\n  <button type=\\\"reset\\\" mat-raised-button>reset</button>\\n</form>\\n\\n\"","export default \"<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!--- Note that these columns can be defined in any order.\\r\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"username\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> User name</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.username}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"lastName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Last Name</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\r\\n  </ng-container>\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"firstName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> First Name</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"email\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Email</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n  </ng-container>\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"role\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Role</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.role}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"action\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n      <button mat-icon-button color=\\\"accent\\\" [routerLink]=\\\"'/users/edit/'+element.id\\\" >\\r\\n        <mat-icon>create</mat-icon>\\r\\n      </button>\\r\\n     <!-- <button mat-icon-button color=\\\"accent\\\" (click)=\\\"openDialog(element.id)\\\" >\\r\\n        <mat-icon>delete</mat-icon>\\r\\n      </button>-->\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n\\r\\n\"","export default \"\\n<mat-list>\\n  <pre>  </pre>\\n  <mat-icon mat-list-icon><i class=\\\"material-icons\\\"></i></mat-icon>\\n\\n  <mat-icon mat-list-icon><i class=\\\"material-icons\\\" (click)=\\\"goBack()\\\"  routerLink=\\\"/home\\\">reply_all</i></mat-icon>\\n  <pre></pre>\\n\\n  <mat-list-item routerLink=\\\"list\\\">&nbsp;&nbsp;&nbsp;&nbsp;Users list</mat-list-item>\\n  <mat-divider></mat-divider>\\n  <mat-list-item routerLink=\\\"add\\\">&nbsp;&nbsp;&nbsp;&nbsp;Add User</mat-list-item>\\n  <mat-divider></mat-divider>\\n  <mat-list-item routerLink=\\\"view\\\">&nbsp;&nbsp;&nbsp;&nbsp;View Users</mat-list-item>\\n</mat-list>\\n<!--\\n<mat-expansion-panel>\\n\\n  <mat-expansion-panel-header>\\n\\n    <mat-panel-title routerLink=\\\"list\\\">\\n      User List\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      Details\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n  <p>...</p>\\n</mat-expansion-panel><mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title routerLink=\\\"add\\\">\\n      Add User\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      Details\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n  <p>...</p>\\n</mat-expansion-panel><mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title routerLink=\\\"view\\\">\\n      View User\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      Details\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n  <p>...</p>\\n</mat-expansion-panel>-->\\n\"","export default \"<p>view-users works!</p>\\n\"","export class User {\n  constructor(\n    public username: string,\n    public password: string,\n    public firstName: string,\n    public lastName: string,\n    public email: string,\n    public role: string\n  ) {\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {User} from '../../models/user';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {observableToBeFn} from 'rxjs/internal/testing/TestScheduler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  users: User[];\n\n  constructor(private httpc: HttpClient) {\n  }\n\n\n  public getAllUsers(): Observable<User[]> {\n    //const observable=this.httpClient.get<any>()\n    //return this.httpc.get<any>(api).pipe(map((result=>result._embedded.users)));\n    return this.httpc.get<any>(`${environment.urlBackend}users`)\n      .pipe(map(result => result._embedded.users));\n\n\n  }\n/*\n  public addUser(user: User) {\n    return this.httpc.post(`${environment.urlBackend}users`, user).subscribe();\n  }\n\n  public findById(id: string): Observable<User> {\n\n    return this.httpc.get<User>(`${environment.urlBackend}users/${id}`);\n  }\n\n  public editById(id: string, user: User): Observable<User> {\n\n    return this.httpc.patch<User>(`${environment.urlBackend}users/${id}`, user);\n  }\n\n  public delete(id: string): Observable<any> {\n\n    return this.httpc.delete(`${environment.urlBackend}users/${id}`);\n\n  }*/\n\n\n\n  public addUser(user: User): Observable<User> {\n\n    return this.httpc.post<User>(`${environment.urlBackend}users`, user);\n  }\n  public findById(id: string): Observable<User> {\n\n    return this.httpc.get<User>(`${environment.urlBackend}users/${id}`);\n  }\n  public editById(id: string, user: User): Observable<User> {\n\n    return this.httpc.patch<User>(`${environment.urlBackend}users/${id}`, user);\n  }\n  public delete(id: string): Observable<any> {\n\n    return this.httpc.delete(`${environment.urlBackend}users/${id}`);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci9hZGQtdXNlcnMvYWRkLXVzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {User} from '../../../core/models/user';\nimport {UserService} from '../../../core/services/user/user.service';\nimport {Location} from '@angular/common';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-add-users',\n  templateUrl: './add-users.component.html',\n  styleUrls: ['./add-users.component.scss']\n})\nexport class AddUsersComponent implements OnInit {\n  user: User = new User('', '', '', '', '', '');\n  id: string;\n\n  constructor(private userService: UserService, private location: Location, private router: Router, private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.id = params.id;\n      if (this.id) {\n        this.userService.findById(this.id).subscribe(user => this.user = user);\n      }\n    });\n  }\n\n  submit() {\n    if (this.id) {\n      delete this.user.password;\n      this.userService.editById(this.id, this.user).subscribe(user => this.router.navigate(['/users']));\n\n\n    } else {\n      console.log(this.user);\n      this.userService.addUser(this.user).subscribe(user => this.router.navigate(['/users']));\n    }\n  }\n\n  goBack() {\n    this.location.back();\n    console.log('Go back');\n  }\n\n}\n","export default \"table {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VyL2xpc3QtdXNlcnMvQzpcXFVzZXJzXFxUYXllYlxcRGVza3RvcFxcSUlUXFxBbmd1bGFyXFxwcm9qZXRBbmd1bGFyMjAyMFxcZnJvbnRFbmQvc3JjXFxhcHBcXG1vZHVsZXNcXHVzZXJcXGxpc3QtdXNlcnNcXGxpc3QtdXNlcnMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvdXNlci9saXN0LXVzZXJzL2xpc3QtdXNlcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3VzZXIvbGlzdC11c2Vycy9saXN0LXVzZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcbiAgd2lkdGg6MTAwJTtcclxufVxyXG4iLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../../core/services/user/user.service';\nimport {User} from '../../../core/models/user';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatTableDataSource} from '@angular/material';\n\n\n@Component({\n  selector: 'app-list-users',\n  templateUrl: './list-users.component.html',\n  styleUrls: ['./list-users.component.scss']\n})\nexport class ListUsersComponent implements OnInit {\n  dataSource;\n  private users:User[];\n  displayedColumns : string[]=[ 'username', 'firstName','lastName', 'email','role']\n  constructor(private  userSerivce: UserService) {\n  }\n /* openDialog(id): void {\n    const dialogRef = this.dialog.open(AreYouSureComponent, {\n      width: '250px',\n      data: 'Delete item ?'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.delete(id);\n      }\n    });\n  }*/\n  ngOnInit() {\n    this.userSerivce.getAllUsers().subscribe((users:any) => {this.users = users, this.dataSource = new MatTableDataSource<User>(this.users)});\n\n    //this.userSerivce.getAllUsers().subscribe((result)=>this.users=result);\n  }\n\n  loadUsers() {\n    this.userSerivce.getAllUsers().subscribe(users => this.users = users);\n\n  }\n\n  delete(id: any) {\n    this.userSerivce.delete(id).subscribe(() => this.loadUsers());\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {UserComponent} from './user.component';\nimport {ListUsersComponent} from './list-users/list-users.component';\nimport {AddUsersComponent} from './add-users/add-users.component';\nimport {ViewUsersComponent} from './view-users/view-users.component';\n\nconst routes: Routes = [{path: '', component: UserComponent},\n  {path: 'list', component: ListUsersComponent},\n  {path: 'add', component: AddUsersComponent},\n  {path: 'view/:id', component: ViewUsersComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule {\n}\n","export default \"table {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VyL0M6XFxVc2Vyc1xcVGF5ZWJcXERlc2t0b3BcXElJVFxcQW5ndWxhclxccHJvamV0QW5ndWxhcjIwMjBcXGZyb250RW5kL3NyY1xcYXBwXFxtb2R1bGVzXFx1c2VyXFx1c2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL3VzZXIvdXNlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci91c2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcbiAgd2lkdGg6MTAwJTtcclxufVxyXG4iLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Location} from '@angular/common';\n\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private location:Location) { }\n\n  ngOnInit() {\n  }\n\n  goBack():void{\n    this.location.back();\n    console.log('goBack()')\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserComponent } from './user.component';\nimport { ListUsersComponent } from './list-users/list-users.component';\nimport { AddUsersComponent } from './add-users/add-users.component';\nimport { ViewUsersComponent } from './view-users/view-users.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {MatExpansionModule, MatIconModule, MatListModule, MatStepperModule} from '@angular/material';\n\n\n@NgModule({\n  declarations: [UserComponent, ListUsersComponent, AddUsersComponent, ViewUsersComponent],\n    imports: [\n        CommonModule,\n        UserRoutingModule,\n        SharedModule,\n        MatListModule,\n        MatExpansionModule,\n        MatStepperModule,\n        MatIconModule\n    ]\n})\nexport class UserModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci92aWV3LXVzZXJzL3ZpZXctdXNlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view-users',\n  templateUrl: './view-users.component.html',\n  styleUrls: ['./view-users.component.scss']\n})\nexport class ViewUsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"modules-user-user-module-es5.js"}