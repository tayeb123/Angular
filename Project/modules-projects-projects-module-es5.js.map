{"version":3,"sources":["src/app/modules/projects/add-projects/add-projects.component.html","src/app/modules/projects/list-projects/list-projects.component.html","src/app/modules/projects/projects.component.html","src/app/modules/projects/view-projects/view-projects.component.html","src/app/core/services/project/project.service.ts","src/app/modules/projects/add-projects/add-projects.component.scss","src/app/modules/projects/add-projects/add-projects.component.ts","src/app/modules/projects/list-projects/list-projects.component.scss","src/app/modules/projects/list-projects/list-projects.component.ts","src/app/modules/projects/projects-routing.module.ts","src/app/modules/projects/projects.component.scss","src/app/modules/projects/projects.component.ts","src/app/modules/projects/projects.module.ts","src/app/modules/projects/view-projects/view-projects.component.scss","src/app/modules/projects/view-projects/view-projects.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,wgCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+BAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,quBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,cAAb;AAAA;AAAA;AAEE,8BAAoB,UAApB,EAA0C;AAAA;;AAAtB,aAAA,UAAA,GAAA,UAAA;AAA4B;;AAFlD;AAAA;AAAA,4BAMa,OANb,EAM4B;AACxB,iBAAO,KAAK,UAAL,CAAgB,IAAhB,WAAiC,sDAAA,CAAA,aAAA,CAAA,CAAY,UAA7C,eAAmE,OAAnE,CAAP;AACD;AARH;AAAA;AAAA,+BASgB,EAThB,EAS4B,OAT5B,EAS4C;AACxC,iBAAO,KAAK,UAAL,CAAgB,KAAhB,WAAkC,sDAAA,CAAA,aAAA,CAAA,CAAY,UAA9C,sBAAoE,EAApE,GAA0E,OAA1E,CAAP;AACD;AAXH;AAAA;AAAA,iCAakB,EAblB,EAa4B;AACxB,iBAAO,KAAK,UAAL,CAAgB,GAAhB,WAAgC,sDAAA,CAAA,aAAA,CAAA,CAAY,UAA5C,sBAAkE,EAAlE,EAAP;AACD;AAfH;AAAA;AAAA,oCAiBqB,EAjBrB,EAiB+B;AAC3B,iBAAO,KAAK,UAAL,CAAgB,GAAhB,WAA6B,sDAAA,CAAA,aAAA,CAAA,CAAY,UAAzC,sBAA+D,EAA/D,cAAP;AACD;AAnBH;AAAA;AAAA,uCAqBwB,EArBxB,EAqBkC;AAC9B,iBAAO,KAAK,UAAL,CAAgB,GAAhB,WAA4B,sDAAA,CAAA,aAAA,CAAA,CAAY,UAAxC,sBAA8D,EAA9D,kBACJ,IADI,CACC,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAA,MAAM;AAAA,mBAAI,MAAM,CAAC,SAAP,CAAiB,KAArB;AAAA,WAAV,CADD,CAAP;AAC+C;AAChD;AAxBH;AAAA;AAAA,yCA0BuB;AACnB,iBAAO,KAAK,UAAL,CAAgB,GAAhB,WAA4B,sDAAA,CAAA,aAAA,CAAA,CAAY,UAAxC,eACJ,IADI,CACC,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAA,MAAM;AAAA,mBAAI,MAAM,CAAC,SAAP,CAAiB,QAArB;AAAA,WAAV,CADD,CAAP;AAED;AA7BH;AAAA;AAAA,gCA+BgB,EA/BhB,EA+B0B;AAEtB,iBAAO,KAAK,UAAL,CAAgB,MAAhB,WAA0B,sDAAA,CAAA,aAAA,CAAA,CAAY,UAAtC,mBAAyD,EAAzD,EAAP;AACD;AAlCH;;AAAA;AAAA,OAAA;;;;cAEkC,iDAAA,CAAA,YAAA;;;;AAFrB,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH1B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,oBAAb;AAAA;AAAA;AAOE,oCAAoB,WAApB,EACoB,WADpB,EACyC,cADzC,EAEoB,cAFpB,EAEkD;AAAA;;AAF9B,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,WAAA,GAAA,WAAA;AAAqB,aAAA,cAAA,GAAA,cAAA;AACrB,aAAA,cAAA,GAAA,cAAA;AAPZ,aAAA,QAAA,GAAW,CAAC,EAAD,CAAX;AACA,aAAA,UAAA,GAAa,CAAC,EAAD,CAAb;AAON,aAAK,SAAL,GAAiB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACtC,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CADgC;AAEtC,UAAA,WAAW,EAAE,CAAC,EAAD,CAFyB;AAGtC,UAAA,QAAQ,EAAE,CAAC,EAAD,CAH4B;AAItC,UAAA,UAAU,EAAE,CAAC,EAAD;AAJ0B,SAAvB,CAAjB;AAMD;;AAhBH;AAAA;AAAA,mCAkBU;AAAA;;AAGN,eAAK,WAAL,CAAiB,WAAjB,GAA+B,UAA/B,CAA0C,UAAA,KAAK,EAAG;AAChD,YAAA,KAAI,CAAC,UAAL,GAAkB,KAAK,CAAC,MAAN,CAAa,UAAA,IAAI;AAAA,qBAAI,IAAI,CAAC,IAAL,KAAc,WAAlB;AAAA,aAAjB,CAAlB;AACA,YAAA,KAAI,CAAC,QAAL,GAAgB,KAAK,CAAC,MAAN,CAAa,UAAA,IAAI;AAAA,qBAAI,IAAI,CAAC,IAAL,KAAc,iBAAlB;AAAA,aAAjB,CAAhB;AACD,WAHD;;AAIA,eAAK,cAAL,CAAoB,MAApB,CAA2B,SAA3B,CAAqC,UAAA,MAAM,EAAG;AAC5C,gBAAM,EAAE,GAAG,MAAM,CAAC,EAAlB;;AACA,gBAAI,EAAJ,EAAQ;AACN,cAAA,KAAI,CAAC,EAAL,GAAU,EAAV;;AACA,cAAA,KAAI,CAAC,cAAL,CAAoB,QAApB,CAA6B,KAAI,CAAC,EAAlC,EAAsC,SAAtC,CAAgD,UAAA,OAAO,EAAG;AACxD,gBAAA,KAAI,CAAC,SAAL,CAAe,UAAf,CAA0B,OAA1B;;AACA,gBAAA,KAAI,CAAC,cAAL,CAAoB,WAApB,CAAgC,KAAI,CAAC,EAArC,EAAyC,SAAzC,CAAmD,UAAA,OAAO,EAAG;AAC3D,kBAAA,KAAI,CAAC,SAAL,CAAe,UAAf,CAA0B;AAAC,oBAAA,OAAO,EAAE,YAAY,OAAO,CAAC;AAA9B,mBAA1B;AACD,iBAFD;;AAGA,gBAAA,KAAI,CAAC,cAAL,CAAoB,cAApB,CAAmC,KAAI,CAAC,EAAxC,EAA4C,SAA5C,CAAsD,UAAA,UAAU,EAAG;AACjE,kBAAA,KAAI,CAAC,SAAL,CAAe,UAAf,CAA0B;AAAC,oBAAA,UAAU,EAAE,UAAU,CAAC,GAAX,CAAe,UAAA,SAAS;AAAA,6BAAI,YAAY,SAAS,CAAC,QAA1B;AAAA,qBAAxB;AAAb,mBAA1B;AACD,iBAFD;AAGD,eARD;AASD;AACF,WAdD;AAeD;AAxCH;;AAAA;AAAA,OAAA;;;;cAOmC,2CAAA,CAAA,aAAA;;cACwB,mEAAA,CAAA,gBAAA;;cACrB,4CAAA,CAAA,gBAAA;;;;AATzB,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,iHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,qBAAb;AAAA;AAAA;AAEE,uCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAM,MAAM,GAAW,CAAC;AAAC,MAAA,IAAI,EAAE,EAAP;AAAW,MAAA,SAAS,EAAE,gDAAA,CAAA,mBAAA;AAAtB,KAAD,EACrB;AAAC,MAAA,IAAI,EAAE,MAAP;AAAe,MAAA,SAAS,EAAE,mEAAA,CAAA,uBAAA;AAA1B,KADqB,EAErB;AAAC,MAAA,IAAI,EAAE,KAAP;AAAc,MAAA,SAAS,EAAE,iEAAA,CAAA,sBAAA;AAAzB,KAFqB,EAGrB;AAAC,MAAA,IAAI,EAAE,UAAP;AAAmB,MAAA,SAAS,EAAE,mEAAA,CAAA,uBAAA;AAA9B,KAHqB,CAAvB;;AAUA,QAAa,qBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJjC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACjBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAa,iBAAb;AAAA;AAAA;AAEE,iCAAoB,QAApB,EAAqC;AAAA;;AAAjB,aAAA,QAAA,GAAA,QAAA;AAAsB;;AAF5C;AAAA;AAAA,mCAIU,CACP;AALH;AAAA;AAAA,iCAOQ;AACJ,eAAK,QAAL,CAAc,IAAd;AACD;AATH;;AAAA;AAAA,OAAA;;;;cAE+B,4CAAA,CAAA,UAAA;;;;AAFlB,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK6B,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcb,QAAa,cAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAV1B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,gDAAA,CAAA,mBAAA,CAAD,EAAoB,iEAAA,CAAA,sBAAA,CAApB,EAA0C,mEAAA,CAAA,uBAAA,CAA1C,EAAiE,mEAAA,CAAA,uBAAA,CAAjE,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,qDAAA,CAAA,uBAAA,CAFO,EAGP,kDAAA,CAAA,cAAA,CAHO,EAIP,8CAAA,CAAA,eAAA,CAJO,EAKP,8CAAA,CAAA,eAAA,CALO;AAFD,KAAT,CAU0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;ACtBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,qBAAb;AAAA;AAAA;AAEE,uCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKiC,CAAA,EAArB,qBAAqB,CAArB","sourcesContent":["export default \"<form [formGroup]=\\\"formGroup\\\">\\n    <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>Name</mat-label>\\n    <input  id=\\\"name\\\" formControlName=\\\"name\\\" matInput>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>Description</mat-label>\\n    <input  id=\\\"description\\\" formControlName=\\\"description\\\" matInput>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field>\\n    <mat-label>Responsible</mat-label>\\n    <mat-select [value]=\\\"null\\\" id=\\\"responsible\\\" formControlName=\\\"responsible\\\"  required>\\n      <mat-option *ngFor=\\\"let responsible of managers\\\" [value]=\\\"responsible.username\\\">{{responsible.username}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field>\\n    <mat-label>Team</mat-label>\\n    <mat-select [value]=\\\"[]\\\" id=\\\"team\\\" formControlName=\\\"team\\\" multiple  required>\\n      <mat-option *ngFor=\\\"let developer of developers\\\" [value]=\\\"developer.username\\\">{{developer.username}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</form>\\n\"","export default \"<p>list-projects works!</p>\\n\"","export default \"<!--<ul>\\n  <li routerLink=\\\"list\\\">Project list</li>\\n  <li routerLink=\\\"add\\\">Add Project</li>\\n  <li routerLink=\\\"view\\\">View Projects</li>\\n</ul>-->\\n<mat-list>\\n  <pre>  </pre>\\n  <mat-icon mat-list-icon><i class=\\\"material-icons\\\"></i></mat-icon>\\n\\n  <mat-icon mat-list-icon><i class=\\\"material-icons\\\" (click)=\\\"goBack()\\\"  routerLink=\\\"/home\\\">reply_all</i></mat-icon>\\n  <pre></pre>  <mat-list-item  routerLink=\\\"list\\\">&nbsp;&nbsp;&nbsp;&nbsp;Project list</mat-list-item>\\n  <mat-divider></mat-divider>\\n  <mat-list-item routerLink=\\\"add\\\">&nbsp;&nbsp;&nbsp;&nbsp;Add Project</mat-list-item>\\n  <mat-divider></mat-divider>\\n  <mat-list-item routerLink=\\\"view\\\">&nbsp;&nbsp;&nbsp;&nbsp;View Project</mat-list-item>\\n</mat-list>\\n\"","export default \"<p>view-projects works!</p>\\n\"","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Project} from '../../models/project';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../../environments/environment';\nimport {User} from '../../models/user';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  constructor(private httpClient :HttpClient) {  }\n\n\n\n  public add(project:Project):Observable<Project>{\n    return this.httpClient.post<Project>(`${environment.urlBackend}projects`, project)\n  }\n  public update(id: string, project: Project): Observable<Project> {\n    return this.httpClient.patch<Project>(`${environment.urlBackend}projects/${id}`, project)\n  }\n\n  public findById(id: string): Observable<Project> {\n    return this.httpClient.get<Project>(`${environment.urlBackend}projects/${id}`);\n  }\n\n  public findManager(id: string): Observable<User> {\n    return this.httpClient.get<User>(`${environment.urlBackend}projects/${id}/manager`);\n  }\n\n  public findDevelopers(id: string): Observable<User[]> {\n    return this.httpClient.get<any>(`${environment.urlBackend}projects/${id}/developers`)\n      .pipe(map(result => result._embedded.users));;\n  }\n\n  public getAllProjects(): Observable<Project[]> {\n    return this.httpClient.get<any>(`${environment.urlBackend}projects`)\n      .pipe(map(result => result._embedded.projects));\n  }\n\n  public delete(id: string): Observable<any> {\n\n    return this.httpClient.delete(`${environment.urlBackend}users/${id}`);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvamVjdHMvYWRkLXByb2plY3RzL2FkZC1wcm9qZWN0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {User} from '../../../core/models/user';\nimport {ProjectService} from '../../../core/services/project/project.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-add-projects',\n  templateUrl: './add-projects.component.html',\n  styleUrls: ['./add-projects.component.scss']\n})\nexport class AddProjectsComponent implements OnInit {\n  private id: string;\n  private managers = [''];\n  private developers = [''];\n\n  formGroup: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n              private userService, private projectService: ProjectService,\n              private activatedRoute: ActivatedRoute) {\n    this.formGroup = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['',],\n      managers: [''],\n      devolopers: ['']\n    });\n  }\n\n  ngOnInit() {\n\n\n    this.userService.getAllUsers()._subscribe(users => {\n      this.developers = users.filter(user => user.role === 'DEVELOPER');\n      this.managers = users.filter(user => user.role === 'PROJECT_MANAGER');\n    });\n    this.activatedRoute.params.subscribe(params => {\n      const id = params.id;\n      if (id) {\n        this.id = id;\n        this.projectService.findById(this.id).subscribe(project => {\n          this.formGroup.patchValue(project);\n          this.projectService.findManager(this.id).subscribe(manager => {\n            this.formGroup.patchValue({manager: '/users/' + manager.username});\n          });\n          this.projectService.findDevelopers(this.id).subscribe(developers => {\n            this.formGroup.patchValue({developers: developers.map(developer => '/users/' + developer.username)});\n          });\n        });\n      }\n    });\n  }\n\n  /*\n    createResponsible(name){\n      return new User(name,name,name,name,name,\"responsible\");\n    }  createDeveloper(name){\n      return new User(name,name,name,name,name,\"developer\");\n    }\n  */\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvamVjdHMvbGlzdC1wcm9qZWN0cy9saXN0LXByb2plY3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-projects',\n  templateUrl: './list-projects.component.html',\n  styleUrls: ['./list-projects.component.scss']\n})\nexport class ListProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ProjectsComponent} from './projects.component';\nimport {ListProjectsComponent} from './list-projects/list-projects.component';\nimport {AddProjectsComponent} from './add-projects/add-projects.component';\nimport {ViewProjectsComponent} from './view-projects/view-projects.component';\n\nconst routes: Routes = [{path: '', component: ProjectsComponent},\n  {path: 'list', component: ListProjectsComponent},\n  {path: 'add', component: AddProjectsComponent},\n  {path: 'view/:id', component: ViewProjectsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectsRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvamVjdHMvcHJvamVjdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n\n  constructor(private location:Location) { }\n\n  ngOnInit() {\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProjectsRoutingModule } from './projects-routing.module';\nimport { ProjectsComponent } from './projects.component';\nimport { AddProjectsComponent } from './add-projects/add-projects.component';\nimport { ListProjectsComponent } from './list-projects/list-projects.component';\nimport { ViewProjectsComponent } from './view-projects/view-projects.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {MatIconModule, MatListModule} from '@angular/material';\n\n\n@NgModule({\n  declarations: [ProjectsComponent, AddProjectsComponent, ListProjectsComponent, ViewProjectsComponent],\n  imports: [\n    CommonModule,\n    ProjectsRoutingModule,\n    SharedModule,\n    MatListModule,\n    MatIconModule\n  ]\n})\nexport class ProjectsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcHJvamVjdHMvdmlldy1wcm9qZWN0cy92aWV3LXByb2plY3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view-projects',\n  templateUrl: './view-projects.component.html',\n  styleUrls: ['./view-projects.component.scss']\n})\nexport class ViewProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"modules-projects-projects-module-es5.js"}